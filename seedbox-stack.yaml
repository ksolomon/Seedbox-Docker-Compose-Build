version: "3.6"
services:
  Portainer:
    container_name: "Portainer"
    entrypoint:
      - "/portainer"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "portainer"
    image: "cr.portainer.io/portainer/portainer-ce:latest"
    ipc: "private"
    labels:
      com.docker.desktop.extension.api.version: ">= 0.2.2"
      com.docker.desktop.extension.icon: "https://portainer-io-assets.sfo2.cdn.digitaloceanspaces.com/logos/portainer.png"
      com.docker.extension.additional-urls: "[{\"title\":\"Website\",\"url\":\"https://www.portainer.io?utm_campaign=DockerCon&utm_source=DockerDesktop\"\
        },{\"title\":\"Documentation\",\"url\":\"https://docs.portainer.io\"},{\"\
        title\":\"Support\",\"url\":\"https://join.slack.com/t/portainer/shared_invite/zt-txh3ljab-52QHTyjCqbe5RibC2lcjKA\"\
        }]"
      com.docker.extension.detailed-description: "<p data-renderer-start-pos=\"226\"\
        >Portainer&rsquo;s Docker Desktop extension gives you access to all of Portainer&rsquo;s\
        \ rich management functionality within your docker desktop experience.</p><h2\
        \ data-renderer-start-pos=\"374\">With Portainer you can:</h2><ul><li>See\
        \ all your running containers</li><li>Easily view all of your container logs</li><li>Console\
        \ into containers</li><li>Easily deploy your code into containers using a\
        \ simple form</li><li>Turn your YAML into custom templates for easy reuse</li></ul><h2\
        \ data-renderer-start-pos=\"660\">About Portainer&nbsp;</h2><p data-renderer-start-pos=\"\
        680\">Portainer is the worlds&rsquo; most popular universal container management\
        \ platform with more than 650,000 active monthly users. Portainer can be used\
        \ to manage Docker Standalone, Kubernetes, Docker Swarm and Nomad environments\
        \ through a single common interface. It includes a simple GitOps automation\
        \ engine and a Kube API.&nbsp;</p><p data-renderer-start-pos=\"1006\">Portainer\
        \ Business Edition is our fully supported commercial grade product for business-wide\
        \ use. It includes all the functionality that businesses need to manage containers\
        \ at scale. Visit <a class=\"sc-jKJlTe dPfAtb\" href=\"http://portainer.io/\"\
        \ title=\"http://Portainer.io\" data-renderer-mark=\"true\">Portainer.io</a>\
        \ to learn more about Portainer Business and <a class=\"sc-jKJlTe dPfAtb\"\
        \ href=\"http://portainer.io/take5?utm_campaign=DockerCon&amp;utm_source=Docker%20Desktop\"\
        \ title=\"http://portainer.io/take5?utm_campaign=DockerCon&amp;utm_source=Docker%20Desktop\"\
        \ data-renderer-mark=\"true\">get 5 free nodes.</a></p>"
      com.docker.extension.publisher-url: "https://www.portainer.io"
      com.docker.extension.screenshots: "[{\"alt\": \"screenshot one\", \"url\": \"\
        https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-1.png\"\
        },{\"alt\": \"screenshot two\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-2.png\"\
        },{\"alt\": \"screenshot three\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-3.png\"\
        },{\"alt\": \"screenshot four\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-4.png\"\
        },{\"alt\": \"screenshot five\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-5.png\"\
        },{\"alt\": \"screenshot six\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-6.png\"\
        },{\"alt\": \"screenshot seven\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-7.png\"\
        },{\"alt\": \"screenshot eight\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-8.png\"\
        },{\"alt\": \"screenshot nine\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-9.png\"\
        }]"
      io.portainer.server: "true"
      org.opencontainers.image.description: "Docker container management made simple,\
        \ with the worldâ€™s most popular GUI-based container management platform."
      org.opencontainers.image.title: "Portainer"
      org.opencontainers.image.vendor: "Portainer.io"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:07"
    network_mode: "bridge"
    networks:
      - "seedbox_default"
    ports:
      - "8000:8000/tcp"
      - "9443:9443/tcp"
    restart: "always"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    working_dir: "/"
  Flood:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "Flood"
    entrypoint:
      - "/sbin/tini"
      - "--"
      - "flood"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "NODE_VERSION=16.10.0"
      - "YARN_VERSION=1.22.5"
      - "FLOOD_OPTION_HOST=0.0.0.0"
    hostname: "flood"
    image: "jesec/flood:latest"
    ipc: "private"
    labels:
      homepage.description: "Torrent Downloads"
      homepage.group: "Media Downloaders"
      homepage.href: "http://10.0.0.11:3000/"
      homepage.icon: "flood.png"
      homepage.name: "Flood"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:06"
    network_mode: "bridge"
    networks:
      - "seedbox_default"
    ports:
      - "3000:3000/tcp"
    restart: "always"
    user: "download"
    volumes:
      - "/downloads:/downloads"
  Jackett:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "Jackett"
    entrypoint:
      - "/init"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/root"
      - "LANGUAGE=en_US.UTF-8"
      - "LANG=en_US.UTF-8"
      - "TERM=xterm"
      - "XDG_DATA_HOME=/config"
      - "XDG_CONFIG_HOME=/config"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "LSIO_FIRST_PARTY=true"
    hostname: "jackett"
    image: "linuxserver/jackett:latest"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- v0.17.100-ls10 Build-date:- 2020-12-17T06:33:55+00:00"
      homepage.description: "Torrent Proxy"
      homepage.group: "Media Downloaders"
      homepage.href: "http://10.0.0.11:9117/jackett/UI/Dashboard"
      homepage.icon: "jackett.png"
      homepage.name: "Jackett"
      maintainer: "thelamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2021-07-15T07:22:53+00:00"
      org.opencontainers.image.description: "[Jackett](https://github.com/Jackett/Jackett)\
        \ works as a proxy server: it translates queries from apps (Sonarr, SickRage,\
        \ CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses\
        \ the html response, then sends results back to the requesting software. This\
        \ allows for getting recent uploads (like RSS) and performing searches. Jackett\
        \ is a single repository of maintained indexer scraping & translation logic\
        \ - removing the burden from other apps."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-jackett"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "244c0b587516c661dfbc405584b7841eb2bf89ad"
      org.opencontainers.image.revision: "244c0b587516c661dfbc405584b7841eb2bf89ad"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-jackett"
      org.opencontainers.image.title: "Jackett"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-jackett/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v0.18.432-ls36"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:03"
    network_mode: "bridge"
    networks:
      - "seedbox_default"
    ports:
      - "9117:9117/tcp"
    restart: "always"
    volumes:
      - "jackett:/config"
      - "/downloads:/downloads"
    working_dir: "/"
  Medusa:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "Medusa"
    entrypoint:
      - "/init"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "HOME=/root"
      - "TERM=xterm"
      - "LANG=en_US.UTF-8"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "LSIO_FIRST_PARTY=true"
    hostname: "medusa"
    image: "linuxserver/medusa:latest"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- v0.5.1-ls61 Build-date:- 2020-12-16T20:15:35+00:00"
      flame.icon: "television"
      flame.name: "Medusa"
      flame.type: "application"
      flame.url: "https://seedbox.keithsolomon.net/medusa"
      homepage.description: "TV Search"
      homepage.group: "Media Management"
      homepage.href: "https://10.0.0.11:8081/medusa/home"
      homepage.icon: "medusa.png"
      homepage.name: "Medusa"
      maintainer: "sparklyballs,aptalca"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2021-04-17T20:30:07+00:00"
      org.opencontainers.image.description: "[Medusa](https://pymedusa.com/) is an\
        \ automatic Video Library Manager for TV Shows. It watches for new episodes\
        \ of your favorite shows, and when they are posted it does its magic.  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-medusa"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "a4aad1a2bfdccf018f4f2dca50dd5ad9e73f609c"
      org.opencontainers.image.revision: "a4aad1a2bfdccf018f4f2dca50dd5ad9e73f609c"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-medusa"
      org.opencontainers.image.title: "Medusa"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-medusa/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v0.5.11-ls71"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:02"
    network_mode: "bridge"
    networks:
      - "seedbox_default"
    ports:
      - "8081:8081/tcp"
    restart: "always"
    volumes:
      - "medusa-config:/config"
      - "/downloads:/downloads"
      - "/mnt/plex:/mnt/plex"
      - "medusa-data:/tv"
    working_dir: "/"
  NZBGet:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "NZBGet"
    entrypoint:
      - "/init"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
    hostname: "nzbget"
    image: "linuxserver/nzbget:latest"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- v21.0-ls66 Build-date:- 2020-12-16T14:06:36-05:00"
      homepage.description: "Newsgroup Downloader"
      homepage.group: "Media Downloaders"
      homepage.href: "http://10.0.0.11:6789/"
      homepage.icon: "nzbget.png"
      homepage.name: "NZBGet"
      maintainer: "thelamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2021-09-02T11:29:58+02:00"
      org.opencontainers.image.description: "[Nzbget](http://nzbget.net/) is a usenet\
        \ downloader, written in C++ and designed with performance in mind to achieve\
        \ maximum download speed by using very little system resources."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-nzbget"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "504f0d888fbece624cf02fab059c16aa6a0677a7"
      org.opencontainers.image.revision: "504f0d888fbece624cf02fab059c16aa6a0677a7"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-nzbget"
      org.opencontainers.image.title: "Nzbget"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-nzbget/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v21.1-ls92"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:04"
    network_mode: "bridge"
    networks:
      - "seedbox_default"
    ports:
      - "6789:6789/tcp"
    restart: "always"
    volumes:
      - "nzbget:/config"
      - "/downloads:/downloads"
    working_dir: "/"
  Radarr:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "Radarr"
    entrypoint:
      - "/init"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/root"
      - "LANGUAGE=en_US.UTF-8"
      - "LANG=en_US.UTF-8"
      - "TERM=xterm"
      - "XDG_CONFIG_HOME=/config/xdg"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "LSIO_FIRST_PARTY=true"
    hostname: "radarr"
    image: "linuxserver/radarr:latest"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- 3.0.1.4259-ls88 Build-date:- 2020-12-15T22:47:25-05:00"
      flame.icon: "radar"
      flame.name: "Radarr"
      flame.type: "application"
      flame.url: "https://seedbox.keithsolomon.net/radarr"
      homepage.description: "Movie Search"
      homepage.group: "Media Management"
      homepage.href: "http://10.0.0.11:7878/radarr/"
      homepage.icon: "radarr.png"
      homepage.name: "Radarr"
      maintainer: "thelamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2021-05-18T11:55:20+00:00"
      org.opencontainers.image.description: "[Radarr](https://github.com/Radarr/Radarr)\
        \ - A fork of Sonarr to work with movies Ã  la Couchpotato.  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-radarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "141ef4eb668cc9b4046e2133fb61d3c08e8597c0"
      org.opencontainers.image.revision: "141ef4eb668cc9b4046e2133fb61d3c08e8597c0"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-radarr"
      org.opencontainers.image.title: "Radarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-radarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "3.2.0.5048-ls104"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:08"
    network_mode: "bridge"
    networks:
      - "seedbox_default"
    ports:
      - "7878:7878/tcp"
    restart: "always"
    volumes:
      - "radarr:/config"
      - "/downloads:/downloads"
      - "/mnt/plex:/mnt/plex"
    working_dir: "/"
  Transmission:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    container_name: "Transmission"
    entrypoint:
      - "/init"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "LSIO_FIRST_PARTY=true"
    hostname: "transmission"
    image: "linuxserver/transmission:latest"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- 3.00-r0-ls70 Build-date:- 2020-12-16T17:39:44-05:00"
      flame.icon: "cloud-download"
      flame.name: "Transmission"
      flame.type: "application"
      flame.url: "http://seedbox.keithsolomon.net/transmission"
      maintainer: "aptalca"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2021-09-02T05:34:47+02:00"
      org.opencontainers.image.description: "[Transmission](https://www.transmissionbt.com/)\
        \ is designed for easy, powerful use. Transmission has the features you want\
        \ from a BitTorrent client: encryption, a web interface, peer exchange, magnet\
        \ links, DHT, ÂµTP, UPnP and NAT-PMP port forwarding, webseed support, watch\
        \ directories, tracker editing, global and per-torrent speed limits, and more."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-transmission"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "229ac93d3352d7232b3f8c1dab779feda92e7114"
      org.opencontainers.image.revision: "229ac93d3352d7232b3f8c1dab779feda92e7114"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-transmission"
      org.opencontainers.image.title: "Transmission"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-transmission/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "3.00-r2-ls99"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:05"
    network_mode: "bridge"
    networks:
      - "seedbox_default"
    ports:
      - "51413:51413/tcp"
      - "9091:9091/tcp"
    restart: "always"
    volumes:
      - "transmission-watch:/watch"
      - "transmission-config:/config"
      - "/downloads:/downloads"
    working_dir: "/"
  Homepage:
    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"
    command:
      - "node"
      - "server.js"
    container_name: "Homepage"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "NODE_VERSION=18.13.0"
      - "YARN_VERSION=1.22.19"
      - "NODE_ENV=production"
      - "PORT=3000"
    hostname: "homepage"
    image: "ghcr.io/benphelps/homepage:latest"
    ipc: "private"
    labels:
      com.docker.compose.config-hash: "2a43faa20f8c90cba5634f5cf880597fdbe2b4f27b315c4536bd5687ba4beb1d"
      com.docker.compose.container-number: "1"
      com.docker.compose.depends_on: ""
      com.docker.compose.image: "sha256:1acb6a99420ebc7dc17457984d0e8758fa2bfab2ff2bc88bc7a663d61cbae43d"
      com.docker.compose.oneoff: "False"
      com.docker.compose.project: "homepage"
      com.docker.compose.project.config_files: "/data/compose/5/docker-compose.yml"
      com.docker.compose.project.working_dir: "/data/compose/5"
      com.docker.compose.service: "homepage"
      com.docker.compose.version: "2.10.2"
      org.opencontainers.image.created: "2023-01-29T06:09:08.678Z"
      org.opencontainers.image.description: "A highly customizable homepage (or startpage\
        \ / application dashboard) with Docker and service API integrations."
      org.opencontainers.image.documentation: "https://github.com/benphelps/homepage/wiki"
      org.opencontainers.image.licenses: "GPL-3.0"
      org.opencontainers.image.revision: "5af01d2436467c9568143c2216c0e37a71a80c47"
      org.opencontainers.image.source: "https://github.com/benphelps/homepage"
      org.opencontainers.image.title: "homepage"
      org.opencontainers.image.url: "https://github.com/benphelps/homepage"
      org.opencontainers.image.version: "v0.6.4"
    logging:
      driver: "json-file"
      options: {}
    networks:
      - "seedbox_default"
    ports:
      - "4321:3000/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/opt/homepage:/app/config"
    working_dir: "/app"
networks:
  seedbox_default:
    external: true
    name: "seedbox_default"
volumes:
  portainer_data:
    external: true
  radarr:
    external: true
  medusa-config:
    external: true
  medusa-data:
    external: true
  transmission-config:
    external: true
  transmission-watch:
    external: true
  nzbget:
    external: true
  jackett:
    external: true
